index,title,task,level,task+level,design methodology,scope,advancement,TL;DR,path,year,comment
1,Improving Compiler Bug Isolation by Leveraging Large Language Models,bugfix,,,,inner,,"isolating compiler bugs by synthesizing more buggy programs with LLMs, require manual inspect",/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/1_Improving_Compiler_Bug_Isolation_by_Leveraging_Large_Language_Models.pdf,2025,"[""compiler_construction""]"
2,HPCTransCompile: An AI Compiler Generated Dataset for High-Performance CUDA Transpilation and LLM Preliminary Exploration,transpilation,CUDA-C-TVM IR,,translator,outer,"bench, know cans and cants","use TVM to generate CUDA-C code pairs without TVM dependency, generating pairs are used to evaluate code translation accuracy/performance",/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/2_HPCTransCompile_An_AI_Compiler_Generated_Dataset_for_High-Performance_CUDA_Transpilation_and_LLM_Preliminary_Exploration.pdf,2025,"[""datasets_and_benchmarks"" ""end_to_end/code_translator""]"
3,CompilerGPT: Leveraging Large Language Models for Analyzing and Acting on Compiler Optimization Reports,optimization,C/C++,source code optimization with compiler report,translator,outer,"know cans and cants, better optimization",use LLM as source code optimizer with compiler analysis report as guideline,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/3_CompilerGPT_Leveraging_Large_Language_Models_for_Analyzing_and_Acting_on_Compiler_Optimization_Reports.pdf,2025,[]
4,Compiler Optimization via LLM Reasoning for Efficient Model Serving,optmization,TVM IR,,selector,inner,,"use LLM+MCTS to optimize LLM serving speed within TVM metaschedule framework, LLM only performs as schedule generator",/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/4_Compiler_Optimization_via_LLM_Reasoning_for_Efficient_Model_Serving.pdf,2025,[]
5,LEGO-Compiler: Enhancing Neural Compilation Through Translation Composability,transpilation,C-ASM,,translator,inner,"know cans and cants, scalability","skeptualize a framework to use LLM as compiler to translate C code into assembly code with divide-and-conquer translation methodology, stepwise verification",/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/5_LEGO-Compiler_Enhancing_Neural_Compilation_Through_Translation_Composability.pdf,2025,"[""end_to_end/compiler"" ""datasets_and_benchmarks"" ""workflow""]"
6,Autocomp: LLM-Driven Code Optimization for Tensor Accelerators,optimization,C-C+Intrinsic,,translator,inner,"better utility, better optimization",optimize GEMM and conv operators into GEMMINI tensor accelerator using LLMs,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/6_Autocomp_LLM-Driven_Code_Optimization_for_Tensor_Accelerators.pdf,2025,"[""end_to_end/code_translator"" ""end_to_end/optimizer""]"
7,A Systematic Literature Review on Neural Code Translation,survey,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/7_A_Systematic_Literature_Review_on_Neural_Code_Translation.pdf,2025,"[""review"" ""end_to_end/code_translator""]"
8,CompileAgent: Automated Real-World Repo-Level Compilation with Tool-Integrated LLM-based Agent System,others,,,selector,outer,"agent, scalability",auto configure and compile a repository-level code using LLM,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/8_CompileAgent_Automated_Real-World_Repo-Level_Compilation_with_Tool-Integrated_LLM-based_Agent_System.pdf,2025,"[""end_to_end/compiler""]"
9,SymRTLO: Enhancing RTL Code Optimization with LLMs and Neuron-Inspired Symbolic Reasoning,optimization,RTL,,translator,inner,"agent, know cans and cants, better optimization",using RAG and symbolic reasoning to optimize RTL code generation with either dataflow or controlflow optimizations,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/9_SymRTLO_Enhancing_RTL_Code_Optimization_with_LLMs_and_Neuron-Inspired_Symbolic_Reasoning.pdf,2025,"[""end_to_end/HLS""]"
10,QiMeng-Xpiler: Transcompiling Tensor Programs for Deep Learning Systems with a Neural-Symbolic Approach,transpilation,CUDA/BANG/C,,translator,outer,"better optimization, better utility",transcompile CUDA/BANG/VNNI C on NV/AMD/Intel/Cambricon devices with LLM translator and stepwise verification,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/10_QiMeng-Xpiler_Transcompiling_Tensor_Programs_for_Deep_Learning_Systems_with_a_Neural-Symbolic_Approach.pdf,2025,
11,CompilerDream: Learning a Compiler World Model for General Code Optimization,optimization,LLVM IR,,selector,inner,"better optimization, agent",create a RL-env and a value-based agent for compiler pass optimization ,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/11_CompilerDream_Learning_a_Compiler_World_Model_for_General_Code_Optimization.pdf,2025,
12,ECO: An LLM-Driven Efficient Code Optimizer for Warehouse Scale Computers,optmization,code snippet,,translator,outer,copilot,KDD25; a code optimization candidates management and auto-suggestion system (in a copilot way),/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/12_ECO_An_LLM-Driven_Efficient_Code_Optimizer_for_Warehouse_Scale_Computers.pdf,2025,"[""end_to_end/optimizer""]"
13,Can Large Language Models Understand Intermediate Representations in Compilers?,transpilation,LLVM IR,,translator,inner,know cans and cants,"ICML25; a study on LLMs on LLVM IR capability (CFG construction, IR decompilation, IR summarization and Execution Reasoning)",/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/13_Can_Large_Language_Models_Understand_Intermediate_Representations_in_Compilers.pdf,2025,
14,Finding Missed Code Size Optimizations in Compilers using LLMs,optimization,source code,,translator,,better utility,"CC 25; a LLM-based compiler code differential testing tool, a source code generator",/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/14_Finding_Missed_Code_Size_Optimizations_in_Compilers_using_LLMs.pdf,2024,
15,Towards LLM-based optimization compilers. Can LLMs learn how to apply a single peephole optimization? Reasoning is all LLMs need!,optimization,assembly,assembly peephole optimization,translator,inner,know cans and cants,test non-reasoning LLMs and reasoning LLMs on assembly peephole optimization task,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/15_Towards_LLM-based_optimization_compilers._Can_LLMs_learn_how_to_apply_a_single_peephole_optimization_Reasoning_is_all_LLMs_need!.pdf,2024,
16,A test-free semantic mistakes localization framework in Neural Code Translation,bugfix,code snippet,,translaor,outer,better utility,a neural translation bug locator combining static analysis and LLM ,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/16_A_test-free_semantic_mistakes_localization_framework_in_Neural_Code_Translation.pdf,2024,
17,Search-Based LLMs for Code Optimization,optimization,python/c++,,translator,outer,better optimization,use optimization-db retrieval and evolutionary optimization(with CoT) to optimize code snippet ,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/17_Search-Based_LLMs_for_Code_Optimization.pdf,2024,
19,Evaluating the Capability of LLMs in Identifying Compilation Errors in Configurable Systems,bugfix,C/C++/Java,,translator,outer,know cans and cants,"testing LLMs capability to identify compilation errors in configurable systems(macro definition, etc)",/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/19_Evaluating_the_Capability_of_LLMs_in_Identifying_Compilation_Errors_in_Configurable_Systems.pdf,2024,
20,Algorithmic Language Models with Neurally Compiled Libraries,transpilation,asm->nn,,translator,inner,know cans and cants,testing neural compilation(program->nn) with algorithm like calculator and sort with preliminary studies,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/20_Algorithmic_Language_Models_with_Neurally_Compiled_Libraries.pdf,2025,
21,Meta Large Language Model Compiler: Foundation Models of Compiler Optimization,optimization,"IR, assembly",,translator,inner,"know cans and cants, better optimization","a foundation model for IR optimization and asm-IR decompilation, specifically on code size reduction",/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/21_Meta_Large_Language_Model_Compiler_Foundation_Models_of_Compiler_Optimization.pdf,2024,
22,Should AI Optimize Your Code? A Comparative Study of Classical Optimizing Compilers Versus Current Large Language Models,optimization,C+OpenMP,,translator,outer,know cans and cants,propose a new benchmark PCB for LLM-based code optimization and compare with compiler-based optimization,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/22_Should_AI_Optimize_Your_Code_A_Comparative_Study_of_Classical_Optimizing_Compilers_Versus_Current_Large_Language_Models.pdf,2025,
23,AIOS Compiler: LLM as Interpreter for Natural Language Programming and Flow Programming of AI Agents,transpilation,NL->PL,,translator,outer,know cans and cants,"propose a NL-PL intermediate language CoRE, with natural language frontend and LLM-execution backend",/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/23_AIOS_Compiler_LLM_as_Interpreter_for_Natural_Language_Programming_and_Flow_Programming_of_AI_Agents.pdf,2024,
24,An LLM-Tool Compiler for Fused Parallel Function Calling,transpilation,NL->tool call JSON,,translator,outer,"better optimization,better utility","a LLM compiler for function calling and optimized for fused parallel calls, better than plain API call(both InContex and OpenAI Parallel)",/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/24_An_LLM-Tool_Compiler_for_Fused_Parallel_Function_Calling.pdf,2024,"[""agent""]"
25,LLMs as Compiler for Arabic Programming Language,transpilation,arabic PL->PL,,translator,outer,better utility,"a LLM compiler for arabic programming language, translating to python",/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/25_LLMs_as_Compiler_for_Arabic_Programming_Language.pdf,2024,"[""end_to_end/code_translator""]"
26,Compiler generated feedback for Large Language Models,optimization,LLVM IR,,translator,inner,better optimization,"part of Meta LLM Compiler, its IR code size reduction optimization with compiler feedback",/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/26_Compiler_generated_feedback_for_Large_Language_Models.pdf,2024,
27,Priority Sampling of Large Language Models for Compilers,optimization,LLVM IR,,selector,inner,better optimization,"part of Meta LLM Compiler, propose a decode-time sampling method combining tree search and sampling",/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/27_Priority_Sampling_of_Large_Language_Models_for_Compilers.pdf,2024,
28,Enhancing Translation Validation of Compiler Transformations with Large Language Models,bugfix,LLVM IR,,translator,inner,better utility,"use alive2 as validation tool to generate training dataset to train a alive2-like IR-validator LLM, preliminary",/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/28_Enhancing_Translation_Validation_of_Compiler_Transformations_with_Large_Language_Models.pdf,2024,
29,ZS4C: Zero-Shot Synthesis of Compilable Code for Incomplete Code Snippets using LLMs,transpilation,java/python,,translator,outer,better utility,use LLM to complete incomplete code snippet using compiler feedback and few-shot examples,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/29_ZS4C_Zero-Shot_Synthesis_of_Compilable_Code_for_Incomplete_Code_Snippets_using_LLMs.pdf,2024,
30,LangProp: A code optimization framework using Large Language Models applied to driving,optmization,python,,translator,outer,better optimization,propose a metric/data driven training method to use LLM as code optimizer for general domain and first for autodriving domain CARLA,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/30_LangProp_A_code_optimization_framework_using_Large_Language_Models_applied_to_driving.pdf,2024,
31,WhiteFox: White-Box Compiler Fuzzing Empowered by Large Language Models,bugfix,"PyTorch
Inductor, TensorFlow-XLA, and TensorFlow Lite",,translator,outer,"better utility, agent","OOPSLA24, white-box compiler fuzzing using LLM as both optimization source code analyzers and test input generators",/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/31_WhiteFox_White-Box_Compiler_Fuzzing_Empowered_by_Large_Language_Models.pdf,2024,
32,LLM4VV: Developing LLM-Driven Testsuite for Compiler Validation,bugfix,C + OpenACC,,translator,outer,better utility,a LLM-driven compiler validation method using RAG and template to construct OpenACC testcases to find compiler bugs,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/32_LLM4VV_Developing_LLM-Driven_Testsuite_for_Compiler_Validation.pdf,2024,
33,Large Language Models for Compiler Optimization,optimization,LLVM IR,,translator,inner,better optimization ,"part of Meta LLM Compiler, its IR code size reduction optimization with compiler feedback",/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/33_Large_Language_Models_for_Compiler_Optimization.pdf,2023,
34,On the Evaluation of Neural Code Translation: Taxonomy and Benchmark,transpilation,"C++, Java, C#,JavaScript, Python",,translator,outer,"benchmark, know cans and cants","G-TransEval, a benchmark for neural code translation",/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/34_On_the_Evaluation_of_Neural_Code_Translation_Taxonomy_and_Benchmark.pdf,2023,"[""survey""]"
35,Fixing Rust Compilation Errors using LLMs,bugfix,rust,,translator,outer,"better utility, agent, know cans and cants",a rust compilation error fixer using LLMs,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/35_Fixing_Rust_Compilation_Errors_using_LLMs.pdf,2023,"[""bugfix""]"
36,Addressing Compiler Errors: Stack Overflow or Large Language Models?,bugfix,java,,translator,outer,"better utility, know cans and cants",early study on compiler error explanation and fixes to code using chatgpt,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/36_Addressing_Compiler_Errors_Stack_Overflow_or_Large_Language_Models.pdf,2023,
37,Isolating Compiler Bugs by Generating Effective Witness Programs with Large Language Models,bugfix,C/C++ LLVM,,translator,outer,"better utility, agent",compiler bugfinder by LLM-based test program generation,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/37_Isolating_Compiler_Bugs_by_Generating_Effective_Witness_Programs_with_Large_Language_Models.pdf,2024,"[""bugfix""]"
38,CoTran: An LLM-based Code Translator using Reinforcement Learning with Feedback from Compiler and Symbolic Execution,transpilation,"java,python",,translator,outer,"better utility, agent",SFT+PPO trained LLM for code translation with compiler feedback and symbolic execution,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/38_CoTran_An_LLM-based_Code_Translator_using_Reinforcement_Learning_with_Feedback_from_Compiler_and_Symbolic_Execution.pdf,2024,
39,Learning C to x86 Translation: An Experiment in Neural Compilation,transpilation,"C,x86",,translator,inner,know cans and cants,early study on C-x86 neural compilation using transformers,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/39_Learning_C_to_x86_Translation_An_Experiment_in_Neural_Compilation.pdf,2022,"[""end_to_end/compiler""]"
40,Static Neural Compiler Optimization via Deep Reinforcement Learning,optimization,C/C++,,selector,inner,better optimization,RL phase-ordering optimization,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/40_Static_Neural_Compiler_Optimization_via_Deep_Reinforcement_Learning.pdf,2020,
41,Llm compiler: Foundation language models for compiler optimization,optimization,LLVM IR,,translator,inner,better optimization,early work of Meta LLM Compiler,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/41_Llm_compiler_Foundation_language_models_for_compiler_optimization.pdf,2025,
42,Kitten: A Simple Yet Effective Baseline for Evaluating LLM-Based Compiler Testing Techniques,bugfix,,,,,,"ISSTA25, short, not LLM method, a non-LLM baseline(grammar+mutation) to generate program for compiler testing",/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/42_Kitten_A_Simple_Yet_Effective_Baseline_for_Evaluating_LLM-Based_Compiler_Testing_Techniques.pdf,2025,"[""bugfix""]"
43,LLMs in Compiler Optimization: Challenges and Future Direction,position paper,,,,,,"a short position paper, say LLM Compiler can be used for better performance/hardware utilization/reduced compilation time",/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/43_LLMs_in_Compiler_Optimization_Challenges_and_Future_Direction.pdf,2025,
44,Vega: Automatically generating compiler backends using a pre-trained transformer model,compiler construction,LLVM C++/Tablegen,,generator,inner,"better utility, know cans and cants",use transformer(LLM) as code generator to generate LLVM backend code,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/44_Vega_Automatically_generating_compiler_backends_using_a_pre-trained_transformer_model.pdf,2025,"[""compiler_construction""]"
45,Compiler-R1: Towards Agentic Compiler Auto-tuning with Reinforcement Learning,optimization,LLVM IR,,selector,inner,"agent, better optimization",use finetuned LLM to generate coldstart init pass sequence for autotuning,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/45_Compiler-R1_Towards_Agentic_Compiler_Auto-tuning_with_Reinforcement_Learning.pdf,2025,"[""agent"" ""end_to_end/optimizer""]"
46,Reductive Analysis with Compiler-Guided Large Language Models for Input-Centric Code Optimizations,utility,,,,outer,"better utility, know cans and cants","PLDI25, use LLM as code analysis tool by reductive analysis the source code, get comparable analysis accuracy with profiling-based baselines in less time",/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/46_Reductive_Analysis_with_Compiler-Guided_Large_Language_Models_for_Input-Centric_Code_Optimizations.pdf,2025,
47,Llm-vectorizer: Llm-based verified loop vectorizer,optimization,C/C++ + SIMD Intrinsic,,translator,outer,"better optimization, know cans and cants","CGO25, use LLM as source code loop vectorize annotator",/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/47_Llm-vectorizer_Llm-based_verified_loop_vectorizer.pdf,2025,
48,"Language models for code optimization: Survey, challenges and future directions",survey,,,,,,"ACM CSUR24, code optimization survey","/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/48_Language_models_for_code_optimization_Survey,_challenges_and_future_directions.pdf",2025,"[""survey""]"
49,Experimental system for the Principles of Compiler course based on fine-tuned StarCoder2 large language model,compiler construction,toy compiler generation,,generator,inner,,use LLM(starcoder2) as compiler-principle course assistant to assist toy compiler generation,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/49_Experimental_system_for_the_Principles_of_Compiler_course_based_on_fine-tuned_StarCoder2_large_language_model.pdf,2025,"[""compiler_construction""]"
51,DeCOS: Data-Efficient Reinforcement Learning for Compiler Optimization Selection Ignited by LLM,optimization,LLVM IR,,selector,inner,"better optimization, agent","ICS25, RL-agent for opt pass generation(use LLM as pass list predictor)",/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/51_DeCOS_Data-Efficient_Reinforcement_Learning_for_Compiler_Optimization_Selection_Ignited_by_LLM.pdf,2025,
52,Perfcodegen: Improving performance of llm generated code with execution feedback,optimization,python,,translator,outer,better optimization,"use execution-feedback to aid improving llm generated code performance(generate first, optimize later)",/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/52_Perfcodegen_Improving_performance_of_llm_generated_code_with_execution_feedback.pdf,2025,
53,Clozemaster: Fuzzing rust compiler by harnessing llms for infilling masked real programs,bugfix(fuzz),rust,,translator,outer,"better utility, agent","ICSE25, use LLM as fuzzing test for rust compiler, use a mask+infill as mutation way to generate compiler test programs",/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/53_Clozemaster_Fuzzing_rust_compiler_by_harnessing_llms_for_infilling_masked_real_programs.pdf,2025,"[""bugfix""]"
54,Integrating LLM-based code optimization with human-like exclusionary reasoning for computational education,optimization,python(humaneval codexglue),,translator,outer,"better utility, know cans and cants","preventing LLMs performing destructive edits, make diffs rather than regenerate for better follow-up code optimization and correctness",/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/54_Integrating_LLM-based_code_optimization_with_human-like_exclusionary_reasoning_for_computational_education.pdf,2025,
57,Advancements in AI-Based Compiler Optimization Techniques for Machine Learning Workloads,optimization,NNs,,selector,inner,better optimization,"use LLM to optimize ML inference, trying NAS(Neural Architecture Search) + RL to get better optimization sequences",/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/57_Advancements_in_AI-Based_Compiler_Optimization_Techniques_for_Machine_Learning_Workloads.pdf,2025,
58,SpeedGen: Enhancing Code Efficiency through Large Language Model-Based Performance Optimization,optimization,python,,translator,outer,"agent,better optimization, know cans and cants","SANER25, propose an iterative pipeline to optimize code performance(with general correctness and performance feedback)",/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/58_SpeedGen_Enhancing_Code_Efficiency_through_Large_Language_Model-Based_Performance_Optimization.pdf,2025,
59,Autoiot: Llm-driven automated natural language programming for aiot applications,transpilation,NL->Code(python),,translator,outer,"agent, better utility","Mobicom25, use LLM as code agent for IOT data processing, equipped with tools, code generation(outline+detail), refinement ",/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/59_Autoiot_Llm-driven_automated_natural_language_programming_for_aiot_applications.pdf,2025,
60,"Scalable, validated code translation of entire projects using large language models",transpilation,go->rust,,translator,outer,"better utility, scalability, know cans and cants","PLDI25, a project level LLM-based code translator, focus on type translation, dependency and project partition, scales to 10k LOC project(73% IO correct in function)","/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/60_Scalable,_validated_code_translation_of_entire_projects_using_large_language_models.pdf",2025,
61,Enhancing LLM-based Compiler Fuzzing with Error Detection and Correction,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/61_Enhancing_LLM-based_Compiler_Fuzzing_with_Error_Detection_and_Correction.pdf,2025,
62,"ML-Triton, A Multi-Level Compilation and Language Extension to Triton GPU Programming",,,,,,,,"/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/62_ML-Triton,_A_Multi-Level_Compilation_and_Language_Extension_to_Triton_GPU_Programming.pdf",2025,
63,Efficient program optimization through knowledge-enhanced LoRA fine-tuning of large language models,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/63_Efficient_program_optimization_through_knowledge-enhanced_LoRA_fine-tuning_of_large_language_models.pdf,2025,
64,Insights from verification: Training a verilog generation LLM with reinforcement learning with testbench feedback,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/64_Insights_from_verification_Training_a_verilog_generation_LLM_with_reinforcement_learning_with_testbench_feedback.pdf,2025,
65,"Compiler-Integrated, Conversational AI for Debugging CS1 Programs",,,,,,,,"/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/65_Compiler-Integrated,_Conversational_AI_for_Debugging_CS1_Programs.pdf",2025,"[""bugfix""]"
66,Bridging the PLC Binary Analysis Gap: A Cross-Compiler Dataset and Neural Framework for Industrial Control Systems,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/66_Bridging_the_PLC_Binary_Analysis_Gap_A_Cross-Compiler_Dataset_and_Neural_Framework_for_Industrial_Control_Systems.pdf,2025,"[""datasets_and_benchmarks""]"
67,Metrex: A benchmark for verilog code metric reasoning using llms,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/67_Metrex_A_benchmark_for_verilog_code_metric_reasoning_using_llms.pdf,2025,"[""datasets_and_benchmarks""]"
68,Unlocking LLM Repair Capabilities in Low-Resource Programming Languages Through Cross-Language Translation and Multi-Agent Refinement,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/68_Unlocking_LLM_Repair_Capabilities_in_Low-Resource_Programming_Languages_Through_Cross-Language_Translation_and_Multi-Agent_Refinement.pdf,2025,
69,"LLM-Based Multi-Agent Systems for Software Engineering: Literature Review, Vision, and the Road Ahead",,,,,,,,"/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/69_LLM-Based_Multi-Agent_Systems_for_Software_Engineering_Literature_Review,_Vision,_and_the_Road_Ahead.pdf",2025,"[""survey""]"
70,Introducing Compiler Semantics into Large Language Models as Programming Language Translators: A Case Study of C to x86 Assembly,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/70_Introducing_Compiler_Semantics_into_Large_Language_Models_as_Programming_Language_Translators_A_Case_Study_of_C_to_x86_Assembly.pdf,2024,"[""end_to_end/compiler""]"
71,Virtual Compiler Is All You Need For Assembly Code Search,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/71_Virtual_Compiler_Is_All_You_Need_For_Assembly_Code_Search.pdf,2024,
72,Slade: A portable small language model decompiler for optimized assembly,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/72_Slade_A_portable_small_language_model_decompiler_for_optimized_assembly.pdf,2024,
73,Llm4decompile: Decompiling binary code with large language models,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/73_Llm4decompile_Decompiling_binary_code_with_large_language_models.pdf,2024,
74,Automatic Generation of OpenCL Code through Polyhedral Compilation with LLM,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/74_Automatic_Generation_of_OpenCL_Code_through_Polyhedral_Compilation_with_LLM.pdf,2024,
75,Degpt: Optimizing decompiler output with llm,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/75_Degpt_Optimizing_decompiler_output_with_llm.pdf,2024,
76,The mutators reloaded: Fuzzing compilers with large language model generated mutation operators,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/76_The_mutators_reloaded_Fuzzing_compilers_with_large_language_model_generated_mutation_operators.pdf,2024,
77,Enhancing XML-based Compiler Construction with Large Language Models: A Novel Approach,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/77_Enhancing_XML-based_Compiler_Construction_with_Large_Language_Models_A_Novel_Approach.pdf,2024,
78,Compiler Optimization: A Deep Learning and Transformer-Based Approach,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/78_Compiler_Optimization_A_Deep_Learning_and_Transformer-Based_Approach.pdf,2024,"[""end_to_end/optimizer""]"
79,Effilearner: Enhancing efficiency of generated code via self-optimization,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/79_Effilearner_Enhancing_efficiency_of_generated_code_via_self-optimization.pdf,2024,"[""end_to_end/optimizer""]"
80,Dcc--help: Transforming the Role of the Compiler by Generating Context-Aware Error Explanations with Large Language Models,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/80_Dcc--help_Transforming_the_Role_of_the_Compiler_by_Generating_Context-Aware_Error_Explanations_with_Large_Language_Models.pdf,2024,
81,Verified code transpilation with LLMs,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/81_Verified_code_transpilation_with_LLMs.pdf,2024,
82,Codefuse-13b: A pretrained multi-lingual code large language model,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/82_Codefuse-13b_A_pretrained_multi-lingual_code_large_language_model.pdf,2024,"[""new_llms""]"
83,ALTA: Compiler-Based Analysis of Transformers,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/83_ALTA_Compiler-Based_Analysis_of_Transformers.pdf,2024,"[""new_methods"" ""end_to_end/compiler""]"
84,Rectifier: Code translation with corrector via llms,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/84_Rectifier_Code_translation_with_corrector_via_llms.pdf,2024,
85,VERILOCC: End-to-End Cross-Architecture Register Allocation via LLM,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/85_VeriLocc_End-to-End_Cross-Architecture_Register_Allocation_via_LLM.pdf,2025,
86,Rtlrewriter: Methodologies for large models aided rtl code optimization,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/86_Rtlrewriter_Methodologies_for_large_models_aided_rtl_code_optimization.pdf,2024,
87,DeepSeek-Coder: When the Large Language Model Meets Programming--The Rise of Code Intelligence,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/87_DeepSeek-Coder_When_the_Large_Language_Model_Meets_Programming--The_Rise_of_Code_Intelligence.pdf,2024,"[""new_llms""]"
88,Comback: A versatile dataset for enhancing compiler backend development efficiency,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/88_Comback_A_versatile_dataset_for_enhancing_compiler_backend_development_efficiency.pdf,2024,"[""compiler_construction"" ""datasets_and_benchmarks""]"
89,Leveraging Machine Learning for Quantum Compilation Optimization,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/89_Leveraging_Machine_Learning_for_Quantum_Compilation_Optimization.pdf,2024,
90,Automated c/c++ program repair for high-level synthesis via large language models,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/90_Automated_cc++_program_repair_for_high-level_synthesis_via_large_language_models.pdf,2024,
91,AlphaTrans: A Neuro-Symbolic Compositional Approach for Repository-Level Code Translation and Validation,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/91_AlphaTrans_A_Neuro-Symbolic_Compositional_Approach_for_Repository-Level_Code_Translation_and_Validation.pdf,2024,
92,Unicoder: Scaling code large language model via universal code,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/92_Unicoder_Scaling_code_large_language_model_via_universal_code.pdf,2024,"[""new_llms""]"
93,OMPar: Automatic Parallelization with AI-Driven Source-to-Source Compilation,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/93_OMPar_Automatic_Parallelization_with_AI-Driven_Source-to-Source_Compilation.pdf,2024,
94,ComPAT: A Compiler Principles Course Assistant,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/94_ComPAT_A_Compiler_Principles_Course_Assistant.pdf,2024,
95,Exploring the impact of the output format on the evaluation of large language models for code translation,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/95_Exploring_the_impact_of_the_output_format_on_the_evaluation_of_large_language_models_for_code_translation.pdf,2024,
96,Llm-based processor verification: A case study for neuromorphic processor,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/96_Llm-based_processor_verification_A_case_study_for_neuromorphic_processor.pdf,2024,
97,LLMDFA: analyzing dataflow in code with large language models,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/97_LLMDFA_analyzing_dataflow_in_code_with_large_language_models.pdf,2024,
98,Hlspilot: Llm-based high-level synthesis,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/98_Hlspilot_Llm-based_high-level_synthesis.pdf,2024,
99,Lost in translation: A study of bugs introduced by large language models while translating code,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/99_Lost_in_translation_A_study_of_bugs_introduced_by_large_language_models_while_translating_code.pdf,2024,
100,Hdldebugger: Streamlining hdl debugging with large language models,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/100_Hdldebugger_Streamlining_hdl_debugging_with_large_language_models.pdf,2024,"[""bugfix""]"
101,How efficient is llm-generated code? a rigorous & high-standard benchmark,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/101_How_efficient_is_llm-generated_code_a_rigorous_&_high-standard_benchmark.pdf,2024,"[""datasets_and_benchmarks""]"
102,Large language model-based agents for software engineering: A survey,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/102_Large_language_model-based_agents_for_software_engineering_A_survey.pdf,2024,"[""survey""]"
103,In-the-loop hyper-parameter optimization for llm-based automated design of heuristics,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/103_In-the-loop_hyper-parameter_optimization_for_llm-based_automated_design_of_heuristics.pdf,2024,
104,Verigen: A large language model for verilog code generation,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/104_Verigen_A_large_language_model_for_verilog_code_generation.pdf,2024,"[""end_to_end/HLS"" ""new_llms""]"
105,Investigating LLM Capabilities in the Identification of Compilation Errors in Configurable Systems,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/105_Investigating_LLM_Capabilities_in_the_Identification_of_Compilation_Errors_in_Configurable_Systems.pdf,2024,
106,Knowledge transfer from high-resource to low-resource programming languages for code llms,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/106_Knowledge_transfer_from_high-resource_to_low-resource_programming_languages_for_code_llms.pdf,2024,
107,Enhancing Black-box Compiler Option Fuzzing with LLM through Command Feedback,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/107_Enhancing_Black-box_Compiler_Option_Fuzzing_with_LLM_through_Command_Feedback.pdf,2024,
108,Can large language models write parallel code?,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/108_Can_large_language_models_write_parallel_code.pdf,2024,
109,RTLFixer: Automatically fixing RTL syntax errors with large language model,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/109_RTLFixer_Automatically_fixing_RTL_syntax_errors_with_large_language_model.pdf,2024,
110,Iterative refinement of project-level code context for precise code generation with compiler feedback,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/110_Iterative_refinement_of_project-level_code_context_for_precise_code_generation_with_compiler_feedback.pdf,2024,
111,Make every move count: Llm-based high-quality rtl code generation using mcts,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/111_Make_every_move_count_Llm-based_high-quality_rtl_code_generation_using_mcts.pdf,2024,"[""end_to_end/HLS""]"
112,A case study of llm for automated vulnerability repair: Assessing impact of reasoning and patch validation feedback,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/112_A_case_study_of_llm_for_automated_vulnerability_repair_Assessing_impact_of_reasoning_and_patch_validation_feedback.pdf,2024,
113,RustAssistant: Using LLMs to Fix Compilation Errors in Rust Code,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/113_RustAssistant_Using_LLMs_to_Fix_Compilation_Errors_in_Rust_Code.pdf,2024,
114,Rtllm: An open-source benchmark for design rtl generation with large language model,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/114_Rtllm_An_open-source_benchmark_for_design_rtl_generation_with_large_language_model.pdf,2024,"[""datasets_and_benchmarks""]"
115,Code Optimization for Python using Large Pre-Trained Model,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/115_Code_Optimization_for_Python_using_Large_Pre-Trained_Model.pdf,2024,
116,Code Optimization Chain-of-Thought: Structured Understanding and Self-Checking,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/116_Code_Optimization_Chain-of-Thought_Structured_Understanding_and_Self-Checking.pdf,2024,
117,Function-Level Compilation Provenance Identification with Multi-Faceted Neural Feature Distillation and Fusion,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/117_Function-Level_Compilation_Provenance_Identification_with_Multi-Faceted_Neural_Feature_Distillation_and_Fusion.pdf,2024,
118,Compiler-provenance identification in obfuscated binaries using vision transformers,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/118_Compiler-provenance_identification_in_obfuscated_binaries_using_vision_transformers.pdf,2024,
119,Scaling CS1 Support with Compiler-Integrated Conversational AI,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/119_Scaling_CS1_Support_with_Compiler-Integrated_Conversational_AI.pdf,2024,
120,Rome was Not Built in a Single Step: Hierarchical Prompting for LLM-based Chip Design,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/120_Rome_was_Not_Built_in_a_Single_Step_Hierarchical_Prompting_for_LLM-based_Chip_Design.pdf,2024,
121,LLM-aided testbench generation and bug detection for finite-state machines,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/121_LLM-aided_testbench_generation_and_bug_detection_for_finite-state_machines.pdf,2024,
122,Fair: flow type-aware pre-training of compiler intermediate representations,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/122_Fair_flow_type-aware_pre-training_of_compiler_intermediate_representations.pdf,2024,"[""new_llms""]"
123,Iterative or innovative? a problem-oriented perspective for code optimization,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/123_Iterative_or_innovative_a_problem-oriented_perspective_for_code_optimization.pdf,2024,
124,Origen: Enhancing rtl code generation with code-to-code augmentation and self-reflection,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/124_Origen_Enhancing_rtl_code_generation_with_code-to-code_augmentation_and_self-reflection.pdf,2024,
125,A Graph-Based Algorithm for Optimizing GCC Compiler Flag Settings,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/125_A_Graph-Based_Algorithm_for_Optimizing_GCC_Compiler_Flag_Settings.pdf,2024,
126,Llm-based code generation method for golang compiler testing,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/126_Llm-based_code_generation_method_for_golang_compiler_testing.pdf,2023,
127,Neuroevolutionary Compiler Control for Code Optimization,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/127_Neuroevolutionary_Compiler_Control_for_Code_Optimization.pdf,2023,
128,CompCodeVet: a compiler-guided validation and enhancement approach for code dataset,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/128_CompCodeVet_a_compiler-guided_validation_and_enhancement_approach_for_code_dataset.pdf,2023,
129,Binary code summarization: Benchmarking chatgpt/gpt-4 and other large language models,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/129_Binary_code_summarization_Benchmarking_chatgptgpt-4_and_other_large_language_models.pdf,2023,"[""datasets_and_benchmarks""]"
130,Lmpa: Improving decompilation by synergy of large language model and program analysis,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/130_Lmpa_Improving_decompilation_by_synergy_of_large_language_model_and_program_analysis.pdf,2023,"[""end_to_end/decompiler""]"
131,Copiloting the copilots: Fusing large language models with completion engines for automated program repair,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/131_Copiloting_the_copilots_Fusing_large_language_models_with_completion_engines_for_automated_program_repair.pdf,2023,
132,Tracr: Compiled transformers as a laboratory for interpretability,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/132_Tracr_Compiled_transformers_as_a_laboratory_for_interpretability.pdf,2023,
133,Automated program repair in the era of large pre-trained language models,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/133_Automated_program_repair_in_the_era_of_large_pre-trained_language_models.pdf,2023,"[""bugfix""]"
134,Leveraging reinforcement learning and large language models for code optimization,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/134_Leveraging_reinforcement_learning_and_large_language_models_for_code_optimization.pdf,2023,
135,Autochip: Automating hdl generation using llm feedback,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/135_Autochip_Automating_hdl_generation_using_llm_feedback.pdf,2023,
136,Extending source code pre-trained language models to summarise decompiled binaries,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/136_Extending_source_code_pre-trained_language_models_to_summarise_decompiled_binaries.pdf,2023,
137,Improving binary code similarity transformer models by semantics-driven instruction deemphasis,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/137_Improving_binary_code_similarity_transformer_models_by_semantics-driven_instruction_deemphasis.pdf,2023,
138,ANPL: towards natural programming with interactive decomposition,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/138_ANPL_towards_natural_programming_with_interactive_decomposition.pdf,2023,
139,Benchdirect: A directed language model for compiler benchmarks,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/139_Benchdirect_A_directed_language_model_for_compiler_benchmarks.pdf,2023,"[""datasets_and_benchmarks""]"
140,White-box compiler fuzzing empowered by large language models,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/140_White-box_compiler_fuzzing_empowered_by_large_language_models.pdf,2023,
141,OPTango: Multi-central representation learning against innumerable compiler optimization for binary diffing,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/141_OPTango_Multi-central_representation_learning_against_innumerable_compiler_optimization_for_binary_diffing.pdf,2023,
142,Llm-assisted code cleaning for training accurate code generators,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/142_Llm-assisted_code_cleaning_for_training_accurate_code_generators.pdf,2023,
143,Learning transformer programs,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/143_Learning_transformer_programs.pdf,2023,
144,How well does LLM generate security tests?,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/144_How_well_does_LLM_generate_security_tests.pdf,2023,
145,"Neural shape compiler: A unified framework for transforming between text, point cloud, and program",,,,,,,,"/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/145_Neural_shape_compiler_A_unified_framework_for_transforming_between_text,_point_cloud,_and_program.pdf",2023,"[""others""]"
146,Generate and pray: Using sallms to evaluate the security of llm generated code,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/146_Generate_and_pray_Using_sallms_to_evaluate_the_security_of_llm_generated_code.pdf,2023,
147,Enhancing genetic improvement mutations using large language models,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/147_Enhancing_genetic_improvement_mutations_using_large_language_models.pdf,2023,
148,A critical review of large language model on software engineering: An example from chatgpt and automated program repair,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/148_A_critical_review_of_large_language_model_on_software_engineering_An_example_from_chatgpt_and_automated_program_repair.pdf,2023,
149,Hpc-gpt: Integrating large language model for high-performance computing,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/149_Hpc-gpt_Integrating_large_language_model_for_high-performance_computing.pdf,2023,
150,Large language models are few-shot testers: Exploring llm-based general bug reproduction,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/150_Large_language_models_are_few-shot_testers_Exploring_llm-based_general_bug_reproduction.pdf,2023,
151,Compilable neural code generation with compiler feedback,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/151_Compilable_neural_code_generation_with_compiler_feedback.pdf,2022,
152,Learning to combine instructions in llvm compiler,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/152_Learning_to_combine_instructions_in_llvm_compiler.pdf,2022,
153,BabelTower: Learning to Auto-parallelized Program Translation,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/153_BaberTower_Learning_to_Auto-parallelized_Program_Translation.pdf,2022,
154,Code translation with compiler representations,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/154_Code_translation_with_compiler_representations.pdf,2022,
155,Boosting neural networks to decompile optimized binaries,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/155_Boosting_neural_networks_to_decompile_optimized_binaries.pdf,2022,
156,What is it like to program with artificial intelligence?,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/156_What_is_it_like_to_program_with_artificial_intelligence.pdf,2022,
157,Transrepair: Context-aware program repair for compilation errors,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/157_Transrepair_Context-aware_program_repair_for_compilation_errors.pdf,2022,"[""bugfix""]"
158,Quest: Graph transformer for quantum circuit reliability estimation,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/158_Quest_Graph_transformer_for_quantum_circuit_reliability_estimation.pdf,2022,"[""others""]"
159,Cross-language binary-source code matching with intermediate representations,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/159_Cross-language_binary-source_code_matching_with_intermediate_representations.pdf,2022,"[""binary""]"
160,Jtrans: Jump-aware transformer for binary code similarity detection,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/160_Jtrans_Jump-aware_transformer_for_binary_code_similarity_detection.pdf,2022,"[""binary""]"
161,Pop quiz! can a large language model help with reverse engineering?,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/161_Pop_quiz!_can_a_large_language_model_help_with_reverse_engineering.pdf,2022,
162,AI Powered Compiler Techniques for DL Code Optimization,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/162_AI_Powered_Compiler_Techniques_for_DL_Code_Optimization.pdf,2021,
163,Fine-grained compiler identification with sequence-oriented neural modeling,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/163_Fine-grained_compiler_identification_with_sequence-oriented_neural_modeling.pdf,2021,
164,Python と日本語変換: Trans-Compiler と Transformer の比較,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/164_Python_と日本語変換_Trans-Compiler_と_Transformer_の比較.pdf,2021,
165,Thinking like transformers,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/165_Thinking_like_transformers.pdf,2021,"[""others""]"
166,Tfix: Learning to fix coding errors with a text-to-text transformer,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/166_Tfix_Learning_to_fix_coding_errors_with_a_text-to-text_transformer.pdf,2021,"[""bugfix""]"
167,Enabling Tensor Language Model to Assist in Generating High-Performance Tensor Programs for Deep Learning,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/167_Enabling_Tensor_Language_Model_to_Assist_in_Generating_High-Performance_Tensor_Programs_for_Deep_Learning.pdf, 2024,
168,Unsupervised Binary Code Translation with Application to Code Similarity Detection and Vulnerability Discovery,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/168_Unsupervised_Binary_Code_Translation_with_Application_to_Code_Similarity_Detection_and_Vulnerability_Discovery.pdf,2023,
169,Forklift: An Extensible Neural Lifter,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/169_Forklift_An_Extensible_Neural_Lifter.pdf,2024,
170,How could Neural Networks understand Programs?,,,,,,,,/Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/170_How_could_Neural_Networks_understand_Programs.pdf,2021,
171,Enabling Transformers to Understand Low-Level Programs,,,,,,,, /Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/171_Enabling_Transformers_to_Understand_Low-Level_Programs.pdf, 2022,
172,NatGen: Generative Pre-training by “Naturalizing” Source Code,,,,,,,, /Users/zhangshuoming/Desktop/THPC-survey-LLMCompiler/phase2_filtered/172_NatGen_Generative_Pre-training_by_Naturalizing_Source_Code.pdf, 2022,